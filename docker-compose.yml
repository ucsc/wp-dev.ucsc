services:
  server:
    platform: linux/amd64
    image: nginx:1.19.10-alpine
    container_name: ${NAME}-server
    depends_on:
      - wp
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./public:/var/www/html
      - ./proxy/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/certs:/etc/nginx/certs
    networks:
      - wpsite
  
  db:
    platform: linux/amd64
    image: mysql:8.0
    container_name: ${NAME}-db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db:/var/lib/mysql
    networks:
      - wpsite
  
  wp:
    platform: linux/amd64
    container_name: ${NAME}-wp
    depends_on:
      - db
    build: .
    restart: always
    ports:
      - 8080:80
    environment:
      WORDPRESS_DB_HOST: ${NAME}-db:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_CONFIG_EXTRA: define('WP_ALLOW_MULTISITE', true);
      DOCKER_DEV: docker_dev
    volumes: [ './public/:/var/www/html' ]
    hostname: wp-dev.ucsc
    labels:
      com.ucsc.expose.domain: "wp-dev.ucsc"
      com.ucsc.expose.domainIsHost: "true"
      com.ucsc.expose.subdomainHosts: "site1 site2 site3"
    networks:
      wpsite:
        aliases:
          - wp-dev.ucsc
  wpcli:
    platform: linux/amd64
    image: wordpress:cli-php8.1
    container_name: ${NAME}-cli
    depends_on:
      - wp
    user: 1000:1000
    command: tail -f /dev/null
    volumes: [ './public/:/var/www/html' ]
    environment:
      WORDPRESS_DB_HOST: ${NAME}-db:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
    networks:
      - wpsite

networks:
  wpsite:
    driver: bridge
volumes:
  wp: null
  db: null
